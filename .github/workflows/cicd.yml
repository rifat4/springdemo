name: demo-canary-ec2

on:
  push:
    branches: ["test-adammeh"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # ----------------------------
      # Step 1: Check if v1 exists on Docker Hub
      # ----------------------------
      - name: Check if v1 exists
        id: check_v1
        run: |
          if docker manifest inspect adammeh/demo-cicd:v1 > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # ----------------------------
      # Step 2: Build and tag Docker image
      # ----------------------------
      - name: Build Docker image
        run: |
          mvn clean install -DskipTests
          if [ "${{ steps.check_v1.outputs.exists }}" = "false" ]; then
            echo "ðŸ‘‰ Building v1 for the first time"
            docker build -t adammeh/demo-cicd:v1 --build-arg APP_VERSION=v1 .
          else
            echo "ðŸ‘‰ Building new v2"
            docker build -t adammeh/demo-cicd:v2 --build-arg APP_VERSION=v2 .
          fi

      # ----------------------------
      # Step 3: Push to Docker Hub
      # ----------------------------
      - name: Login to Docker Hub
        run: docker login -u "${{ secrets.DOCKER_USERNAME2 }}" -p "${{ secrets.DOCKER_PASSWORD2 }}"

      - name: Push Docker image
        run: |
          if [ "${{ steps.check_v1.outputs.exists }}" = "false" ]; then
            docker push adammeh/demo-cicd:v1
          else
            docker push adammeh/demo-cicd:v2
          fi

      # ----------------------------
      # Step 4: Copy NGINX config to EC2
      # ----------------------------
      - name: Copy NGINX config to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "nginx.conf"
          target: "/home/ubuntu/nginx/"
          overwrite: true

      # ----------------------------
      # Step 5: SSH into EC2 and deploy
      # ----------------------------
      - name: Deploy app to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Logging into Docker Hub..."
            docker login -u "${{ secrets.DOCKER_USERNAME2 }}" -p "${{ secrets.DOCKER_PASSWORD2 }}"

            docker network create demo-net || true

            # Run v1 if it doesn't exist yet
            if ! docker ps -a --format '{{.Names}}' | grep -q '^demo-v1$'; then
              echo "ðŸš€ Starting demo-v1 for the first time"
              docker run -d --name demo-v1 --network demo-net -p 8081:8080 adammeh/demo-cicd:v1
            fi

            # Always update v2
            docker rm -f demo-v2 2>/dev/null || true
            docker run -d --name demo-v2 --network demo-net -p 8082:8080 adammeh/demo-cicd:v2 || true

            # Restart NGINX
            docker rm -f nginx 2>/dev/null || true
            docker run -d --name nginx --network demo-net -p 80:80 \
              -v /home/ubuntu/nginx:/etc/nginx:ro nginx:latest

            echo "âœ… Deployment complete!"
