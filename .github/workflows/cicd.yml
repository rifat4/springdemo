name: demo-canary-ec2

on:
  push:
    branches: [ "test-adammeh" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # ----------------------------
      # Step 1: Checkout code
      # ----------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------
      # Step 2: Set up Java
      # ----------------------------
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # ----------------------------
      # Step 3: Build Docker image (new version v2)
      # ----------------------------
      - name: Build Docker image
        run: |
          mvn clean install -DskipTests
          docker build -t adammeh/demo-cicd:v2 --build-arg APP_VERSION=v2 .

      # ----------------------------
      # Step 4: Login & Push to Docker Hub
      # ----------------------------
      - name: Login to Docker Hub
        run: docker login -u "${{ secrets.DOCKER_USERNAME2 }}" -p "${{ secrets.DOCKER_PASSWORD2 }}"

      - name: Push Docker image
        run: docker push adammeh/demo-cicd:v2

      # ----------------------------
      # Step 5: Create NGINX config dynamically
      # ----------------------------
      - name: Create NGINX config
        run: |
          echo '
          upstream demo_app {
              server demo-v1:8080 weight=7;
              server demo-v2:8080 weight=3;
          }

          server {
              listen 80;
              location / {
                  proxy_pass http://demo_app;
              }
          }' > nginx.conf

      # ----------------------------
      # Step 6: Copy NGINX config to EC2
      # ----------------------------
      - name: Upload NGINX config to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "nginx.conf"
          target: "/home/ubuntu/nginx/nginx.conf"

      # ----------------------------
      # Step 7: SSH into EC2 and deploy
      # ----------------------------
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Logging into Docker Hub..."
            docker login -u "${{ secrets.DOCKER_USERNAME2 }}" -p "${{ secrets.DOCKER_PASSWORD2 }}"

            echo "Pulling new image v2..."
            docker pull adammeh/demo-cicd:v2

            echo "Creating Docker network..."
            docker network create demo-net || true

            echo "Ensuring v1 is running..."
            if ! [ "$(docker ps -q -f name=demo-v1)" ]; then
              docker run -d --name demo-v1 --network demo-net -p 8081:8080 adammeh/demo-cicd:v1
            fi

            echo "Restarting v2..."
            docker rm -f demo-v2 2>/dev/null || true
            docker run -d --name demo-v2 --network demo-net -p 8082:8080 adammeh/demo-cicd:v2

            echo "Restarting NGINX..."
            docker rm -f nginx 2>/dev/null || true
            docker run -d --name nginx --network demo-net -p 80:80 -v /home/ubuntu/nginx:/etc/nginx:ro nginx:latest

            echo "Reloading NGINX config..."
            docker exec nginx nginx -s reload || true

            echo "âœ… Deployment complete!"
            echo "http://<your-ec2-public-ip>"
