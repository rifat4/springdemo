events {}

http {
    upstream demo-v1_backend {
        server demo-v1:8080;
    }

    upstream demo-v2_backend {
        server demo-v2:8080;
    }

    # Fallback: if no cookie, use weighted upstream to pick
    upstream app_backend {
        server demo-v1:8080 weight=9;  # ~90%
        server demo-v2:8080 weight=1;  # ~10%
    }

    # Map cookie to backend
    map $cookie_version $chosen_backend {
        v1 "demo-v1_backend";
        v2 "demo-v2_backend";
        default "app_backend";
    }

    server {
        listen 80;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # If no cookie, set it based on which backend was picked
            proxy_cookie_path / "/; Path=/; HttpOnly";

            proxy_pass http://$chosen_backend;

            # Assign cookie only if missing
            header_filter_by_lua_block {
                if not ngx.var.cookie_version then
                    local backend = ngx.var.upstream_addr
                    if backend and backend:find("demo-v1") then
                        ngx.header["Set-Cookie"] = "version=v1; Path=/; HttpOnly"
                    elseif backend and backend:find("demo-v2") then
                        ngx.header["Set-Cookie"] = "version=v2; Path=/; HttpOnly"
                    end
                end
            }
        }
    }
}
